/dts-v1/;

/ {
    /* This DTS is made for the Renesas Merlot board */
    compatible = "renesas,merlot", "renesas,r7s721063";
    model = "Renesas,Merlot";
    interrupt-parent = <&armgic>;
    
   /* 
        The default encoding for all peripheral register banks:
        64Bit base address
        64Bit bank size
    */
    #address-cells = <0x2>;
    #size-cells = <0x2>;


    cpus {
        /* 
           For CPU sub-notes the 'reg' property represents the number of the
           CPU core. The number is encoded as 32bit value in the address field
        */
        #address-cells = <0x1>;
        #size-cells = <0x0>;

        cpu@0 {
            device_type = "cpu";
            compatible = "arm,cortex-a7";
            reg = <0x0>;
            /* Clock frequencies are set by boot loader/init script */
            /* clock-frequency = <0x0>; */
        };

        cpu@1 {
            device_type = "cpu";
            compatible = "arm,cortex-a7";
            reg = <0x1>;
            /* Clock frequencies are set by boot loader/init script */
            /* clock-frequency = <0x0>; */
        };
    };
    
    timer {
        compatible = "arm,armv7-timer";
        
        /*  Interrupt signal is defined as following
            IRQ_LEVEL        = (1 <<  8),
            IRQ_PER_CPU      = (1 <<  9),
            IRQ_NOPROBE      = (1 << 10),
            IRQ_NOREQUEST    = (1 << 11),
            
            IRQ_TYPE_LEVEL_LOW
        */
        
        
        /* interrupt-type (PPI), interrupt number, interrupt signal */
        interrupts = <0x1 0xd 0xf08 
                      0x1 0xe 0xf08
                      0x1 0xb 0xf08
                      0x1 0xa 0xf08
                     >;
    };

    pm: pm@e6150000 {
        compatible = "renesas,pm-r7s721063";

        reg = <0x0 0xe6150000 0x0 0x0A90    /* Module Stand-by Controller */
               0x0 0xe6160000 0x0 0x0060    /* Reset Controller */
               0x0 0xff000000 0x0 0x0044    /* Product Register */
              >; 

        status = "ok"; 
        
        pmctrl-0 = <&usbhost_pm>, <&nfma_pm>, <&sfma_pm>,
                   <&ecm_pm>, <&rwdt_pm>, <&scif_pm>,
                   <&hscif_pm>, 
                   <&vin_pm>, <&gpu2d_pm>,
                   <&mipi_pm>, <&rsds_pm>,
                   <&du0_pm>, <&du1_pm>, <&du2_pm>,
                   <&lvds_pm>, <&tcon_pm>,
                   <&vsp0_pm>, <&vsp1_pm>;
    };
    
    clma@e6600000 {
        compatible = "renesas,clma-r7s721063";
        
        /* Clock monitor A - 6 units */
        reg = <0x0 0xe6600000 0x0 0x18    /* CLMA0 */
               0x0 0xe6620000 0x0 0x18    /* CLMA1 */
               0x0 0xe6520000 0x0 0x18    /* CLMA2 */
               0x0 0xe6528000 0x0 0x18    /* CLMA3 */
               0x0 0xe6530000 0x0 0x18    /* CLMA4 */
               0x0 0xe6540000 0x0 0x18    /* CLMA5 */
               >;
        status = "ok";

    };
    
    &pm {
        usbhost_pm: usbhost {
            renesas,groups = "usbhost_data";
            renesas,function = "usbhost";
            
            /* Reset unit */
            pm-srcr7  = < 0xFFFFFFE7 0x00000018 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFFFFFFE7 0x00000018 >;
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFFFFFFE7 0x00000000 >;
            
            /* Clear USB clock stop */
            pm-usbclkcr = < 0xFFFFFEFF 0x00000000 >;
        };

        clma_pm: clma {
            renesas,groups = "clma_data";
            renesas,function = "clma";
            
            /* Reset unit */
            pm-srcr5 = < 0xFFFFFFFE 0x00000001 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr5 = < 0xFFFFFFFE 0x00000001 >;
            
            /* Disable stop clock bits */
            pm-smstpcr5 = < 0xFFFFFFFE 0x00000000 >;
        };
              
        ecm_pm: ecm {
            renesas,groups = "ecm_data";
            renesas,function = "ecm";
            
            /* Reset unit */
            pm-srcr10 = < 0xE0FFFFFF 0x1F000000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr10 = < 0xE0FFFFFF 0x1F000000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr5 = < 0xFFFFCFFF 0x00000000 >;

            /* Enable internal OSC */
            pm-intoscencr = < 0xFFFBFFFE 0x00040001 >;
        };
        
        rwdt_pm: rwdt {
            renesas,groups = "rwdt_data";
            renesas,function = "rwdt";
            
            /* Reset unit */
            pm-srcr4 = < 0xFFFFFFFB 0x00000004 >;

            /* Clear reset bit of this unit */
            pm-srstclr4 = < 0xFFFFFFFB 0x00000004 >;
            
            /* Disable stop clock bits */
            pm-smstpcr4 = < 0xFFFFFFFB 0x00000000 >;

            /* Enable internal OSC */
            pm-intoscencr = < 0xFFFBFFFE 0x00040001 >;
          
        };
        
        nfma_pm: nfma {
            renesas,groups = "nfma_data";
            renesas,function = "nfma";          
            
            /* Reset unit */
             pm-srcr5  = < 0xFFFEFFFF 0x00010000 >; 
        
            /* Clear reset bit of this unit */
             pm-srstclr5 = < 0xFFFEFFFF 0x00010000 >; 
            
            /* Disable stop clock bits */
            pm-smstpcr5 = < 0xFEFFEFFF 0x00000000 >;        

        };
        
        sfma_pm: sfma { 
            renesas,groups = "sfma_data";
            renesas,function = "sfma";          
            
            /* Reset unit refer table 9.13 SRCR7 bit 12*/
             pm-srcr7  = < 0xFFFFEFFF 0x00001000 >; 
        
            /* Clear reset bit of this unit refer table 9.13 SRSTCLR bit 12*/
             pm-srstclr7 = < 0xFFFFEFFF 0x00001000 >; 
            
            /* Disable stop clock bits Refer table 10.54 SMSTPCR7 reg bit 12*/
            pm-smstpcr7 = < 0xFFFFEFFF 0x00000000 >;        
        };
        
        hscif_pm: hscif {
            renesas,groups = "hscif_data";
            renesas,function = "hscif";          
            
            /* Reset unit */
            pm-srcr7  = < 0xFFFCFFFF 0x00030000 >; 
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFFFCFFFF 0x00030000 >; 
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFFFCFFFF 0x00000000 >;        

        };
        
        scif_pm: scif {
            renesas,groups = "scif_data";
            renesas,function = "scif";          
            
            /* Reset unit */
            pm-srcr7  = < 0xFFC3FFFF 0x003C0000 >; 
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFFC3FFFF 0x003C0000 >; 
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFFC3FFFF 0x00000000 >;        

        };
        
        tpu_pm: tpu {
            renesas,groups = "tpu_data";
            renesas,function = "tpu";          
            			
			/* Reset unit TPU0 Bit 4*/
            pm-srcr3  = < 0xFFFFFFEF 0x00000010 >; 
        
            /* Clear reset bit of this unit TPU0 Bit 4 */
            pm-srstclr3 = < 0xFFFFFFEF 0x00000010 >; 
			
			/* Reset unit TPU1 to 3 Bit 1 to 3*/
            pm-srcr6  = < 0xFFFFFFF1 0x0000000E >; 
        
            /* Clear reset bit of this unit TPU1 to 3 Bit 1 to 3 */
            pm-srstclr6 = < 0xFFFFFFF1 0x0000000E >; 
			
            
            /* Disable stop clock bits  for TPU0 Bit 4*/
            pm-smstpcr3 = < 0xFFFFFFEF 0x00000000 >; 
			
            /* Disable stop clock bits  for TPU0 Bit 1 to 3*/
            pm-smstpcr6 = < 0xFFFFFFF1 0x00000000 >;  			

        };
        mipi_pm: mipi {
            renesas,groups = "mipi_data";
            renesas,function = "mipi";          
		
            /* Reset unit */
            pm-srcr8  = < 0xFFFFFFF7 0x00000008 >; 
             		
            /* Clear reset bit of this unit */
            pm-srstclr8 = < 0xFFFFFFF7 0x00000008 >; 

			/* Disable stop clock bits */
            pm-smstpcr8 = < 0xFFFFFFF7 0x00000000 >; 
        };		
        vin_pm: vin {
            renesas,groups = "vin_data";
            renesas,function = "vin";          
            
            /* Reset unit */
            pm-srcr8  = < 0xFFFFF3FF 0x00000C00 >; 
                            
            /* Clear reset bit of this unit */
            pm-srstclr8 = < 0xFFFFF3FF 0x00000C00 >; 
            
            /* Disable stop clock bits */
            pm-smstpcr8 = < 0xFFFFF3FF 0x00000000 >; 

        };
        
        gpu2d_pm: gpu2d {
            renesas,groups = "gpu2d_data";
            renesas,function = "gpu2d";          
            
            /* GPU2D can not be reset. See UM 9.4.2 */

            
            /* Disable stop clock bits */
            pm-smstpcr8 = < 0xFFFFFF7F 0x00000000 >; 
        };

        rsds_pm: rsds {
            renesas,groups = "rsds_data";
            renesas,function = "rsda";          
            
            /* Reset unit */
            pm-srcr7  = < 0xFFFFF7FF 0x00000800 >; 
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFFFFF7FF 0x00000800 >; 
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFFFFF7FF 0x00000000 >;        

        };

        du0_pm: du0 {
            renesas,groups = "du_data";
            renesas,function = "du0";
            /* BIT 24 */
            
            /* Reset unit */
            pm-srcr7  = < 0xFEFFFFFF 0x01000000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFEFFFFFF 0x01000000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFEFFFFFF 0x00000000 >;

        };
        
        du1_pm: du1 {
            renesas,groups = "du_data";
            renesas,function = "du1";
            /* BIT 23 */
            
            /* Reset unit */
            pm-srcr7  = < 0xFF7FFFFF 0x00800000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFF7FFFFF 0x00800000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFF7FFFFF 0x00000000 >;

        };
        
        du2_pm: du2 {
            renesas,groups = "du_data";
            renesas,function = "du2";
            /* BIT 22 */
            
            /* Reset unit */
            pm-srcr7  = < 0xFFBFFFFF 0x00400000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFFBFFFFF 0x00400000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFFBFFFFF 0x00000000 >;

        };
        
        lvds_pm: lvds {
            renesas,groups = "lvds_data";
            renesas,function = "lvds";
            /* BIT 26 */
            
            /* Reset unit */
            pm-srcr7  = < 0xFBFFFFFF 0x04000000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xFBFFFFFF 0x04000000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xFBFFFFFF 0x00000000 >;

        };
        
        tcon_pm: tcon {
            renesas,groups = "tcon_data";
            renesas,function = "tcon";
            /* BIT 29 */
            
            /* Reset unit */
            pm-srcr7  = < 0xDFFFFFFF 0x20000000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr7 = < 0xDFFFFFFF 0x20000000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr7 = < 0xDFFFFFFF 0x00000000 >;

        };
        
        vsp0_pm: vsp0 {
            renesas,groups = "vsp_data";
            renesas,function = "vsp0";
            /* BIT 28 */
            
            /* Reset unit */
            pm-srcr1  = < 0xEFFFFFFF 0x10000000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr1 = < 0xEFFFFFFF 0x10000000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr1 = < 0xEFFFFFFF 0x00000000 >;

        };
        
        vsp1_pm: vsp1 {
            renesas,groups = "vsp_data";
            renesas,function = "vsp1";
            /* BIT 27 */
            
            /* Reset unit */
            pm-srcr1  = < 0xF7FFFFFF 0x08000000 >;
        
            /* Clear reset bit of this unit */
            pm-srstclr1 = < 0xF7FFFFFF 0x08000000 >;
            
            /* Disable stop clock bits */
            pm-smstpcr1 = < 0xF7FFFFFF 0x00000000 >;

        };
    };

    pcmp@0xe66b0000 {
        compatible = "renesas,pcmp-r7s721063";
        reg = <0x0 0xe66b0000 0x0 0x2c
               0x0 0xe6150144 0x0 0x04>;	/* SMSTPCR5 */
        interrupts = <0x0 0x161 0x1>;		/* INTPCMP0FERR */	  
        status = "ok";
    };
    
    ssif@0xE6500000 {
        compatible = "renesas,ssif-r7s721063";
        reg = <0x0 0xE6500000 0x0 0x24          /* 0xE6500000 for SSIF0 or 0xE6510000 for SSIF1 */
               0x0 0xE66A0000 0x0 0x10
               0x0 0xE6150998 0x0 0x04          /* SMSTPCR10 */
               0x0 0xE6E53020 0x0 0x04>;        /* ADGCKDIR  */
               /*0x0 0xE6150134 0x0 0x04>;*/    /* SMSTPCR1  */
        interrupts = <0x0 0x172 0x1>;           /* 0x172 for SSIF0 or 0x175 for SSIF1           */
        status = "ok";
    };

    pfc: pfc@e6060000 {
        compatible = "renesas,pfc-r7s721063";
        reg = <0 0xe6060000 0 0x250>;
        status = "ok";

        /* Use pin configuration 0 */
        /* Alternative configurations e.g. pinctrl-1 are currently not supported */
        pinctrl-0 = <&pcmpl_pins>, <&scif1_pins>, <&scif2_pins>, <&scif3_pins>, <&hscif1_pins>, <&usbhost_pins>, <&nfma_pins>, <&etnb_pins>, <&vi1_pins>, <&vo_pins>, <&msiof3_pins>, <&msiof4_pins>, <&gpio0_pins>, <&gpio2_pins>,<&unused_pins>;
    };

    /* 
       All pin setting values pin-{xxxx} have the following format:
       pin-{xxxx} = < {mask}, {value} >;
    */ 
    &pfc {
        etnb_pins: etnb {
            /* GPSR3[23:6] = 0 first, to change IPSR */
            //pin-gpsr3 = < 0xFF00003F 0x00000000 >;      /* < 0xMASK 0xVALUE > */
            
            /* Set pins GP3_6 (AVB_TXD3) - GP3_18 (AVB_RXD0) to function 0. */
            /* IP6[0-29] = 0 */
	    pin-ipsr6 = < 0x0000FC00 0x00000000 >;
            
            
            /* Set pins  GP3_19 (AVB_RXD0), GP3_20 (AVB_RX_DV), GP3_21 (AVB_RX_ER), GP3_22 AVB_MDC), GP3_23 (AVB_MDIO) to function 1.  */
            /* IP7[0-11] = 0 */
	    pin-ipsr7 = < 0xFFFFF0C0 0x00000000 >;
            
	    /* GPSR3[23:6] = 1 */
	    pin-gpsr3 = < 0xFF00383F 0x00DFC7C0 >;
	   /* pin-pupr3 = <0xFDFFFFFF 0x00000000>;*/
	    /*pin-pupr3 = <0xFDFFFFFF 0xFF000000>;*/
        };
            pcmpl_pins: pcmpl {
            /* Is it causes the GPSRx modification?
            *        IP7 & 8 => Function 2(Value = 1) for PCMPL
            *    PCMP0AP0    IP7[13:12]
            *    PCMP0AN0    IP7[15:14]
            *    PCMP0AP1    IP7[18:16]
            *    PCMP0AN1    IP7[21:19]
            *    PCMP0BP0    IP7[24:22]
            *    PCMP0BN0    IP7[27:25]
            *    PCMP0BP1    IP7[30:28]
            *    PCMP0BN1    IP8[2:0]
            *   GPn[x] = 1 {Function 0-7} / GPn[x] = 0 {GPIO/MD}n
            *
            *   Configuration can be set by picking only one of setings mentioned below & pcmpl2ci.h
            */
            
        	/* Default on D1H; for BOOTSTRP GPIO is configured in Code so make sure all are commented */
			/* CH0: PCMPL__nCDHBootStrapHalfBridge  OR  PCMPL__nNormalHalfBrdige */
            /*
            pin-gpsr3 = < 0xFCFFFFFF 0x03000000 >;
            pin-ipsr7 = < 0xFFFF0FFF 0x00005000 >;
            */

            /* CH0: PCMPL__nNormalFullBridge */
            /*
            pin-gpsr3 = < 0xCCFFFFFF 0x33000000 >;
            pin-ipsr7 = < 0xF03F0FFF 0x02405000 >;
            */

            /* CH0: PCMPL__nCDHSingleNPN */
            /*
            pin-gpsr3 = < 0xFEFFFFFF 0x01000000 >;
            pin-ipsr7 = < 0xFFFFCFFF 0x00001000 >;
            */

            /* CH0: PCMPL__nCDHDualNPN & TPA6211A1 & PCMPL__nCDHBootStrapFullBridge */
            /*
            pin-gpsr3 = < 0xEEFFFFFF 0x11000000 >;
            pin-ipsr7 = < 0xFE3FCFFF 0x00401000 >;
            */

            /* For SSIF audio interface 
             * Note we are using SSIF0 pins
             * GP3[26] = GC2I2S_LRCK (left right channel audio data latch enable input)  --> SSIF0WS  (I2S Left=Low, Right=High)        -->  IPSR7[18:16] = 0
             * GP3[25] = GC2I2S_BCK  (audio ext chip audio data clock)                   --> SSIF0SCK                                   -->  IPSR7[15:14] = 0
             * GP3[24] = GC2I2S_DATA                                                     --> SSIF0TXD                                   -->  IPSR7[13:12] = 0
             * GP3[27] = GC2I2S_SCK  (audio ext chip audio system clock)                 --> SSIFACK  (Common audio clock input/output) -->  IPSR7[21:19] = 0
             */
			
            pin-gpsr3 = < 0xF0FFFFFF 0x0F000000 >;
            pin-ipsr7 = < 0xFFC00FFF 0x00000000 >;
            
            /* For SSIF1 audio interface */
            /*
            pin-gpsr3 = < 0x87FFFFFF 0x78000000 >;
            pin-ipsr7 = < 0x8007FFFF 0x00000000 >;
            */
            /* PUPR3[28] = 0 (no pull up) */
            pin-pupr3 = < 0xefffffff 0x00000000 >;
        };

            scif1_pins: serial1 {
	    /*
	    Use MSIOF1_TX(RXD) (GP3_28 and GP3_29 value = 2) for UART1
	    MOD_SEL[23:22]=2'b00
	    */
	    pin-mod-sel = < 0xFF3FFFFF 0x00000000 >;
	    /*
            SCIF1_RXD
            IP7[24:22]=3'b010
            SCIF1_TXD
            IP7[27:25]=3'b010
            */
            pin-ipsr7 = < 0xF03FFFFF 0x04800000>;
	    /* GP3[29:28] select function by GP3 */
            pin-gpsr3 = < 0xCFFFFFFF 0x30000000 >;
        };
		
            scif2_pins: serial2 {
            renesas,groups = "scif2_data";
            renesas,function = "scif2";

            /* MOD_SEL[7:6]=2'b00 */
            pin-mod-sel2 = < 0xFFFFFF3F 0x00000000 >;

            /*
               SCIF2_RXD
               IP8[11:9]=3'b000
               SCIF2_TXD
               IP8[14:12]=3'b000
            */
            pin-ipsr8 = < 0xFFFF81FF 0x00000000 >;

            /* GP4[3:2] select function by IP8 */
            pin-gpsr4 = < 0xFFFFFFF3 0x0000000C >;
        };
        
        scif3_pins: serial3 {
			/*
			   Use CAN0TX(RXD) (GP2_10 value = 2) for UART3
			   MOD_SEL2[14:13]=2'b01 
			*/
			pin-mod-sel2 = < 0xFFFF9FFF 0x00002000 >;
			/*
               SCIF3_TXD
               IP4[2:0]=3'b010
               SCIF3_RXD
               IP4[5:3]=3'b010
            */
            pin-ipsr4 = < 0xFFFFFFC0 0x00000012>;
			/* GP2[10:9] select function by IP4 */
            pin-gpsr2 = < 0xFFFFF9FF 0x00000600 >;
        };
		
	hscif1_pins: serial5 {
			/*
			   Use CAN0TX(RXD) (GP2_10 value = 2) for UART5
			   MOD_SEL[12]=1'b1 
			*/
			pin-mod-sel = < 0xFFFFEFFF 0x00001000 >;
			/*
               HTX1
               IP4[8:6]=3'b011
               HRX1
               IP4[11:9]=3'b011
            */
            pin-ipsr4 = < 0xFFFFF03F 0x000006C0>;
			/* GP2[12:11] select function by IP4 */
            pin-gpsr2 = < 0xFFFFE7FF 0x00001800 >;
	};
        
        usbhost_pins: usbhost {
            renesas,groups = "usbhost_data";
            renesas,function = "usbhost";

            /* GP1[1:2] select function USB_PWEN and USB_OVC */
            pin-gpsr1 = < 0xFFFFFFF9 0x00000006 >;

        };

        nfma_pins: nfma {
            renesas,groups = "nfma";
            renesas,function = "nfma";

            /* sel_nand (MOD_SEL [20]) = 0x00000000 */
            pin-mod-sel = < 0xFFEFFFFF 0x00000000 >;

            /* NAND_ALE, NAND_CLE, NAND_WE# */
            /* IP4[30:26] = 0 */
            pin-ipsr4 = < 0x83FFFFFF 0x00000000 >;
            /* NAND_RB0, NAND_RE#, NAND_D0-D7, NAND_CS# */
            /* IP5[31:0] = 0 */
            pin-ipsr5 = < 0x00000000 0x00000000 >;

            /* Select peripheral function for NAND pins */
            /* GPSR2[31:24] = 1 */
            pin-gpsr2 = < 0x00FFFFFF 0xFF000000 >;
            /* GPSR3[5:0] = 1 */
            pin-gpsr3 = < 0xFFFFFFC0 0x0000003f >;
        };
        
        mmc_pins: mmc {
            renesas,groups = "mmc";
            renesas,function = "mmc";

            /* MMC0_CLK, MMC_D0-D7, MMC_CMD */
            /* IP5[31:2] = B'001001001001001001001001001001XX */
            pin-ipsr5 = < 0x00000003 0x24924924 >;

            /* Select peripheral function for MMC pins */
            /* GPSR2[31:28] = 1 */
            pin-gpsr2 = < 0x0FFFFFFF 0xF0000000 >;
            /* GPSR3[5:0] = 1 */
            pin-gpsr3 = < 0xFFFFFFC0 0x0000003f >;

            /* Disable pullups */
            /* PUPR3[9:0]=9'b0_0_0_0_0_0_0_0_0 - no pull ups */
            pin-pupr3 = < 0x03ff 0x0000 >;
        };
        
        i2c1_pins: i2c {
            renesas,groups = "i2c1";
            renesas,function = "i2c1";
            
            /* MOD_SEL2[21:20] = 0 */
            pin-mod-sel2 = < 0xffcfffff 0x0 >;

            /* IP8[8:3] = 010 010 */
            pin-ipsr8 = < 0xfffffe07 0x090 >;
            
            /* GP4[1:0] select function 3 */
            pin-gpsr4 = < 0xfffffffc 0x3 >;
            
            /* PUPR4[5:4] = 0 (no pull up) */
            pin-pupr4 = < 0xffffffcf 0x0 >;
        };
        
        vi1_pins: vi1 {
            renesas,groups = "vi1";
            renesas,function = "vi1";
            
            /* MOD_SEL[11] = 0 */
            pin-mod-sel = < 0xfffff7ff 0x00000000 >;
            
	    /* IP1[31:8] = 'b01_01_01_001_001_001_001_001_001 */
		/* IP1[1:0] = 'b01 */
	    pin-ipsr1 = < 0x000000fc 0x54924901>;
	    
	    /* IP2[29:0] = 'b001_01_01_01_1_1_1_01_01_01_01_01_01_01_01_01 */
	    pin-ipsr2 = < 0xc0000000 0x0abd5555>;
	    
	    /* IP3[5:0] = 'b001_001 */
	    pin-ipsr3 = < 0xffffffc0 0x00000009>;
	    
	    /* GP1[29:3] */
	    pin-gpsr1 = < 0xc0000007 0x3ffffff8>;
            
            /* DE via GP0_29 */
            /*pin-ipsr1 = < 0xfffffffc 0x00000001 >;*/
            pin-gpsr0 = < 0xdfffffff 0x20000000 >;
            
        };

        vo_pins: vo {
	    /* Vo0_x ports are shared with RSDS output pins, for LVTTL output, 
	    - RSDSCNTL.RBIASEN = 0
	    - IOCTRL2.poc_rsds = 1
	    - IOCTRL2.rsds_oen = 0
	    - RSDSCNTL.RSDSEN = 0
	     */
         
        /* - IOCTRL2.rsds_oen = 1, disable */
	    pin-ioctrl2 = < 0x7FFFFBFF 0x80000400 >;

        };

        msiof3_pins: serial10 {
            pin-mod-sel = < 0xFFFFFDFF 0x00000000 >;
            pin-ipsr3 = < 0xE7FFF83F 0x08000000 >;
            pin-gpsr1 = < 0x3FFFFFFF 0xC0000000 >;
            pin-gpsr2 = < 0xFFFFFF7F 0x00000080 >;
        };
		
        msiof4_pins: serial11 {
            pin-ipsr3 = < 0xF81FFFFF 0x02000000 >;
            pin-gpsr2 = < 0xFFFFFF8F 0x00000070 >;
        };
		
		gpio0_pins: gpio0 {
            renesas,groups = "gpio_data";
            renesas,function = "gpio0";
            
            // GPn[x] = 1 {Function 0-7} / GPn[x] = 0 {GPIO/MD}n
            // Geely 2.0: PIN GP0[30] is set to GPIO : GC_AMP_SHUTDOWN
	    // GP0[12] is set to GPIO as MS of MAX9276A

            pin-gpsr0 = < 0xBFFFEFFF 0x00000000 >;

			// PUPR0 keeps original value			
            pin-pupr0 = < 0xFFFFFFFF 0x00000000 > ;
        };
        
        gpio2_pins: gpio2 {
            renesas,groups = "gpio_data";
            renesas,function = "gpio2";
            
            // GPn[x] = 1 (alternative function 0 - 7)  / GPn[x] = 0 {GPIO/MD}n
            // Geely 2.0: PIN GP2[3] is set to GPIO : GC_DAC_MUTE

            pin-gpsr2 = < 0xFFFFFFF7 0x00000000 >;
        
            // PUPR2 keeps original value
            pin-pupr2 = < 0xFFFFFFFF 0x00000000 > ;
        };
        unused_pins:unusedpin {
            /*GP0_12 GP3_21 GP3_30 GP3_31 GP4_0 not used,pull up/down disable;GP0_31 nand reset,high pull up, GP1_0 nand wp low pull up disable*/
            pin-gpsr0 = < 0x7FFFEFFF 0x00000000 >;
            pin-gpsr1 = < 0xFFFFFFFE 0x00000000 >;
            pin-gpsr3 = < 0x3FDFFFFF 0x00000000 >;
            pin-gpsr4 = < 0xFFFFFFFE 0x00000000 >;
            pin-pupr1 = < 0xFFFFFFFE 0x00000000 >;
            pin-pupr3 = < 0xFDFFFFFF 0x00000000 >;
            pin-pupr4 = < 0xFFFFFFE3 0x00000000 >;
        };
    };
    
    gpio0: gpio@e6050000 {
        compatible = "renesas,gpio-r7s721063", "renesas,gpio";
        reg = <0 0xe6050000 0 0x50>;

        /*  Interrupt signal is defined as following
            
            IRQ_TYPE_LEVEL_HIGH
        */
        
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x4 0x4>;
    
        /* GPIO is defined as 64bit value */
        #gpio-cells = <2>;

        /* This is a gpio controller */
        gpio-controller;
        gpio-ranges = <&pfc 0 0 32>;


        #interrupt-cells = <2>;
        /* This can be used as external interrupt controller */
        interrupt-controller;
        
        /* Clock suppliers */
        clocks = <&mstp9_clks 12>;
        
		// GPIO0[12]:MS of MAX9276A;GPIO0[30]:GC_AMP_SHUTDOWN
		gpio-enable = <&gpio0 0x0C 0x1E 0x1F>; 
    };

    gpio1: gpio@e6051000 {
        compatible = "renesas,gpio-r7s721063", "renesas,gpio";
        reg = <0 0xe6051000 0 0x50>;
        /*  Interrupt signal is defined as following
            
            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x5 0x4>;
        #gpio-cells = <2>;
        gpio-controller;
        gpio-ranges = <&pfc 0 32 32>;
        #interrupt-cells = <2>;
        /* This can be used as external interrupt controller */
        interrupt-controller;
        
        /* Clock suppliers */
        clocks = <&mstp9_clks 11>;
        
        gpio-enable = <&gpio1 0x0>;
    };

    gpio2: gpio@e6052000 {
        compatible = "renesas,gpio-r7s721063", "renesas,gpio";
        reg = <0 0xe6052000 0 0x50>;
        /*  Interrupt signal is defined as following
            
            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x6 0x4>;
        #gpio-cells = <2>;

        /* This is a gpio controller */
        gpio-controller;
        gpio-ranges = <&pfc 0 64 32>;
        
        #interrupt-cells = <2>;
        /* This can be used as external interrupt controller */
        interrupt-controller;
        
        /* Clock suppliers */
        clocks = <&mstp9_clks 10>;
		
	#gpio-enable-cells = <1>;
	/*block 2 / pin 0 = Output, pin 1 = Input #ICOM */
	/*block 2 / pin 9 = AC_GC_ALARM #POWD*/
	/* block 2 pin 2 = ERROUT */
	/* block 2 pin 8 = Eth enable pin */
        gpio-enable = <&gpio2 0x00 0x01 0x02 0x03 0x08 0x09 0x0A>; 	

    };

    gpio3: gpio@e6053000 {
        compatible = "renesas,gpio-r7s721063", "renesas,gpio";
        reg = <0 0xe6053000 0 0x50>;
        /*  Interrupt signal is defined as following
            
            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x7 0x4>;        
        
        #gpio-cells = <2>;
        gpio-controller;
        gpio-ranges = <&pfc 0 96 32>;
        #interrupt-cells = <2>;
        /* This can be used as external interrupt controller */
        interrupt-controller;
        
        /* Clock suppliers */
        clocks = <&mstp9_clks 9>;
        /* block 3 pin 13 = Eth reset pin */
        /* block 3 pin 21 30 31 not use,GP3[12] loader pin2 use to sync with AC when power off*/
        gpio-enable = <&gpio3 0x00 0x01 0x0C 0x0D 0x15 0x1E 0x1F>;

    };

    gpio4: gpio@e6054000 {
        compatible = "renesas,gpio-r7s721063", "renesas,gpio";
        reg = <0 0xe6054000 0 0x50>;
        /*  Interrupt signal is defined as following
            
            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x8 0x4>;        
        
        #gpio-cells = <2>;
        gpio-controller;
        
        gpio-ranges = <&pfc 0 128 32>;
        #interrupt-cells = <2>;
        
        /* This can be used as external interrupt controller */
        interrupt-controller;
        
        /* Clock suppliers */
        clocks = <&mstp9_clks 8>;
        /*block 4 / pin 0 = not use */
        /*block 4 / pin 1 = ETH2GC_INT */
        gpio-enable = <&gpio4 0x0 0x01>;
    };

    armgic: interrupt-controller@f1001000 {
        compatible = "arm,cortex-a7-gic";
        #interrupt-cells = <0x3>;

        interrupt-controller;
        reg = <0x0 0xf1001000 0x0 0x1000
               0x0 0xf1002000 0x0 0x1000
               0x0 0xf1004000 0x0 0x2000
               0x0 0xf1006000 0x0 0x2000>;

        /*  Interrupt signal is defined as following
            IRQ_LEVEL        = (1 <<  8),
            IRQ_PER_CPU      = (1 <<  9),
            IRQ_NOPROBE      = (1 << 10),
            IRQ_NOREQUEST    = (1 << 11),
            
            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (PPI), interrupt number, interrupt signal */
        interrupts = <0x1 0x9 0xf04>;
    };

    timer@ffca0000 {
        compatible = "renesas,cmt-48-gen2";
        reg = <0x0 0xffca0000 0x0 0x1004>;
        
        /*  Interrupt signal is defined as following
            
            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x8e 0x4
                      0x0 0x8f 0x4>;

        clocks = <&mstp1_clks 0x18>;
        clock-names = "fck";
        renesas,channels-mask = <0x60>;
        status = "ok";
    };

    dcra@e6260000 {
        compatible = "renesas,dcra-r7s721063", "renesas,dcra";
        reg = <0x0 0xe6260000 0x0 0x24>;
        status = "ok";
    };

    ecm@e6e50000 {
        compatible = "renesas,ecm-r7s721063", "renesas,ecm";
        reg = <0x0 0xe6e50000 0x0 0x18
               0x0 0xe6e50040 0x0 0x18
               0x0 0xe6e50080 0x0 0x7c
               /* CMREG for ECMNMI */
               0x0 0xe6e53a00 0x0 0x0c>;

        /*  Interrupt signal is defined as following

            IRQ_TYPE_EDGE_RISING = 0x1
        */
        
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x0b 0x1>;
        status = "ok";
    };
    
    wdt@e6020000 {
        compatible = "renesas,wdt-r7s721063", "renesas,wdt";
        /* RWDT reg RST register (map this as one register set) */
        reg = <0x0 0xe6020000 0x0 0x0C>; 

        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */
        
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x8C 0x4>;

        clocks = <&mstp7_clks 2>;
        status = "ok";
    };

    interrupt-controller@e61c0000 {
        compatible = "renesas,irqc-r7s721063", "renesas,irqc";
        #interrupt-cells = <0x2>;
        interrupt-controller;
        reg = <0x0 0xe61c0000 0x0 0x200>;
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x00 0x4
                      0x0 0x01 0x4
                      0x0 0x02 0x4
                      0x0 0x03 0x4
                      0x0 0x0c 0x4
                      0x0 0x0d 0x4
                      0x0 0x0e 0x4
                      0x0 0x0f 0x4
                      0x0 0x10 0x4
                      0x0 0x11 0x4
                      >;
    };

    serial@e6e60000 {
        compatible = "renesas,scif-r7s721063", "renesas,scif";

        /* SCIF0 base address */
        reg = <0x0 0xe6e60000 0x0 0x40>;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x98 0x4>;

        clocks = <&mstp7_clks 0x15>;
        clock-names = "sci_ick";
        
        /* D1H uses internal clock for the baudrate generator */
        clock-sel = "XIN";
        console = "no";                
        /* For internal clock this is fixed to 260Mhz (ZSphi) */ 
        clock-frequency = < 260000000 >; 
        status = "ok";
    };

    serial@e6e68000 {
        compatible = "renesas,scif-r7s721063", "renesas,scif";

        /* SCIF1 base address */
        reg = <0x0 0xe6e68000 0x0 0x40>;

        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */   
        interrupts = <0x0 0x99 0x4>;         /* SCIF1 interrupt vector */

        clocks = <&mstp7_clks 20>;
        clock-names = "sci_ick";
        console = "no";                
        /* D1H uses internal clock for the baudrate generator */
        clock-sel = "XIN";      /* Alternative option clock-sel = "EXT" */
        
        /* For internal clock this is fixed to 260Mhz (ZSphi) */ 
        clock-frequency = < 260000000 >; 
        status = "ok";
    };

    serial@e6e58000 {
        compatible = "renesas,scif-r7s721063", "renesas,scif";

        /* SCIF2 base address */
        reg = <0x0 0xe6e58000 0x0 0x40>;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x16 0x4>; /* SCIF2 interrupt vector */
        
        clocks = <&mstp7_clks 19>;
        clock-names = "sci_ick";
        
        /* D1H uses internal clock for the baudrate generator */
        clock-sel = "XIN";
        
        /* For internal clock this is fixed to 260Mhz (ZSphi) */
        clock-frequency = < 260000000 >; 
        console = "yes";                 
        debug-agent = "yes";
        status = "ok";
    };

    serial@e6ea8000 {
        compatible = "renesas,scif-r7s721063", "renesas,scif";
        
        /* SCIF3 base address */
        reg = <0x0 0xe6ea8000 0x0 0x40>;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x17 0x4>; /* SCIF3 interrupt vector */
        
        clocks = <&mstp7_clks 18>;
        clock-names = "sci_ick";
        
        /* D1H uses internal clock for the baudrate generator */
        clock-sel = "XIN";
        
        /* For internal clock this is fixed to 260Mhz (ZSphi) */
        clock-frequency = < 260000000 >; 
        status = "ok";
    };

    serial@e62c0000 {
        compatible = "renesas,hscif-r7s721063", "renesas,hscif";
        
        /* HSCIF0 base address */
        reg = <0x0 0xe62c0000 0x0 0x60>;
 
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x9a 0x4>;
        
        clocks = <&mstp7_clks 17>;
        clock-names = "sci_ick";
        status = "disabled";
    };

    serial@e62c8000 {
        compatible = "renesas,hscif-r7s721063", "renesas,hscif";
        
        /* HSCIF1 base address */
        reg = <0x0 0xe62c8000 0x0 0x60>;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x9b 0x4>; /* HSCIF1 interrupt vector */
        
        clocks = <&mstp7_clks 16>;
        clock-names = "sci_ick";

        status = "disabled";
    };

    /* package ETHPHY Var1 switches on the PHY's Enable pin before ETNB searches for available PHYs */
    ethphy1@00000000 {
        compatible = "continental,ethphy1";
    };

    /*
        ETNB (AVB Ethernet Port)
    */
    ethernet@0xE6800000 {
        compatible = "renesas,etheravb-r7s721063";
        reg = <0x0 0xE6800000 0x0 0x800>;       /* 0xE6800000 - 0xE68007FF */
        interrupts = <0x0 0xA3 0x4>;            /* Type(SPI) Number(163) Active(HIGH) */
        clocks = <&mstp8_clks 0xd>;
        phy-mode = "mii";                       /* 10/100 PHY */
        phy-handle = <&eth_phy0>;
        #address-cells = <0x1>;
        #size-cells = <0x0>;
        /* Optional driver configuration */
        /*be-tx-ring-size = <64>; */
        be-rx-ring-size = <48>;
        pollingMode = <1>;
        switchingMode = <0>;
        pollingIntervalMs = <10>;
        /* pollingModeThreshold = <1000>; */
        /* interruptModeThreshold = <500>; */
        /* End of optional driver configuration */        
        eth_phy0: ethernet-phy@0 {              /* Micrel KSZ8041NLI */
            reg = <0x00>;
        };
    };

    usbhost@ee080000 {
        compatible = "renesas,usbhost-r7s721063", "renesas,usbhost";
        reg = <0x0 0xee080000 0x0 0x20000   /* USB Host Controller */
               0x0 0xe6590000 0x0 0x194>;   /* USB Function Controller to   */
                                            /* control internal, shared phy */
        /*  Interrupt signal is defined as following
            
            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 108 0x4>;
        status = "ok";

        bus-range = <1 1>;
        #address-cells = <3>;
        #size-cells = <2>;
        #interrupt-cells = <1>;
        ranges = <0x02000000 0 0xee080000 0 0xee080000 0 0x00010000>;
        interrupt-map-mask = <0xff00 0 0 0x7>;
    };

    clocks {
        #address-cells = <0x2>;
        #size-cells = <0x2>;
        ranges;

        extal_clk {
            compatible = "fixed-clock";
            #clock-cells = <0x0>;
            clock-frequency = <0x1312d00>;
            clock-output-names = "extal";
        };

        cpg_clocks@e6150000 {
            compatible = "renesas,r7s721063-cpg-clocks", "renesas,rcar-gen2-cpg-clocks";
            reg = <0x0 0xe6150000 0x0 0x1000>;
            clocks = <0x7>;
            #clock-cells = <0x1>;
            clock-output-names = "main", "pll0", "pll1", "pll3", "lb", "qspi", "sdh", "sd0", "z";
        };

        pll1_div2_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x2>;
            clock-mult = <0x1>;
            clock-output-names = "pll1_div2";
        };

        zg_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x6>;
            clock-mult = <0x1>;
            clock-output-names = "zg";
        };

        zxclk: zx_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x3>;
            clock-mult = <0x1>;
            clock-output-names = "zx";
        };

        zs_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x6>;
            clock-mult = <0x1>;
            clock-output-names = "zs";
        };

        hp_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0xc>;
            clock-mult = <0x1>;
            clock-output-names = "hp";
        };

        i_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x2>;
            clock-mult = <0x1>;
            clock-output-names = [69 00];
        };

        b_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0xc>;
            clock-mult = <0x1>;
            clock-output-names = [62 00];
        };

        p_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x18>;
            clock-mult = <0x1>;
            clock-output-names = [70 00];
        };

        cl_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x30>;
            clock-mult = <0x1>;
            clock-output-names = "cl";
        };

        m2_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x8>;
            clock-mult = <0x1>;
            clock-output-names = "m2";
        };

        imp_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x4>;
            clock-mult = <0x1>;
            clock-output-names = "imp";
        };

        rclk_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0xc000>;
            clock-mult = <0x1>;
            clock-output-names = "rclk";
        };

        oscclk_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x3000>;
            clock-mult = <0x1>;
            clock-output-names = "oscclk";
        };

        zb3_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x3>;
            #clock-cells = <0x0>;
            clock-div = <0x4>;
            clock-mult = <0x1>;
            clock-output-names = "zb3";
        };

        zb3d2_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x3>;
            #clock-cells = <0x0>;
            clock-div = <0x8>;
            clock-mult = <0x1>;
            clock-output-names = "zb3d2";
        };

        ddr_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x3>;
            #clock-cells = <0x0>;
            clock-div = <0x8>;
            clock-mult = <0x1>;
            clock-output-names = "ddr";
        };

        mp_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x9>;
            #clock-cells = <0x0>;
            clock-div = <0xf>;
            clock-mult = <0x1>;
            clock-output-names = "mp";
        };

        cp_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x8 0x2>;
            #clock-cells = <0x0>;
            clock-div = <0x30>;
            clock-mult = <0x1>;
            clock-output-names = "cp";
        };

        acp_clk {
            compatible = "fixed-factor-clock";
            clocks = <0x7>;
            #clock-cells = <0x0>;
            clock-div = <0x2>;
            clock-mult = <0x1>;
            clock-output-names = "acp";
        };

        mstp0_clks: mstp0_clks@e6150130 {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe6150130 0x0 0x4
                   0x0 0xe6150030 0x0 0x4>;
            
            /* Clock tree parent */
            clocks = <0xa>;
            #clock-cells = <0x1>;
            renesas,clock-indices = <0x0>;
            clock-output-names = "msiof0";
        };

        mstp1_clks: mstp1_clks@e6150134 {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe6150134 0x0 0x4
                   0x0 0xe6150038 0x0 0x4>;
            clocks = <0xb 0xb 0xb 0xc 0xd 0xe 0xe 0xe 0x0e 0x0e>;
            #clock-cells = <0x1>;
            renesas,clock-indices = <0xb 0x15 0x16 0x18 0x19 0x1c 0x1f>;
            clock-output-names = "tmu1", "tmu3", "tmu2", "cmt0", "tmu0", "vsp1-du0", "vsp1-sy";
        };

        mstp2_clks: mstp2_clks@e6150138 {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe6150138 0x0 0x4
                   0x0 0xe6150040 0x0 0x4>;
            clocks = <0xa 0xa 0xa 0xa 0xa 0xa 0xa 0xa>;
            #clock-cells = <0x1>;
            renesas,clock-indices = <0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x10>;
            clock-output-names = "scifa2", "scifa1", "scifa0", "msiof2", "scifb0", "scifb1", "msiof1", "scifb2";
        };

        mstp_clks3: mstp3_clks@e615013c {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe615013c 0x0 0x4 0x0 0xe6150048 0x0 0x4>;
            clocks = <0xc>;
            #clock-cells = <0x1>;
            renesas,clock-indices = <0x1d>;
            clock-output-names = "cmt1";
        };

        mstp7_clks: mstp7_clks@e615014c {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe615014c 0x0 0x4
                   0x0 0xe61501c4 0x0 0x4>;
            clocks = <0xe 0xb 0xb 0xe 0xe 0xb 0xb 0xb 0xb 0x10 0x10>;
            #clock-cells = <0x1>;
            renesas,clock-indices = <0xd 0xe 0xf 0x10 0x11 0x12 0x13 0x14 0x15 0x17 0x18>;
            clock-output-names = "hscif2", "scif5", "scif4", "hscif1", "hscif0",
                                 "scif3", "scif2", "scif1", "scif0", "du1", "du0";
        };

        mstp8_clks: mstp8_clks@e6150990 {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe6150990 0x0 0x4
                   0x0 0xe61509a0 0x0 0x4>;
            clocks = <0xb>;
            #clock-cells = <0x1>;
            renesas,clock-indices = <0xd>;
            clock-output-names = "ether";
        };

        mstp9_clks: mstp9_clks@e6150990 {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe6150994 0x0 0x4
                   0x0 0xe61509a4 0x0 0x4>;
            /* Clock tree dependencies: HP */
            clocks = <0x11>;
            #clock-cells = <0x1>;
            //renesas,clock-indices = <0xd>;
        };

        mstp11_clks:mstp11_clks@e615099c {
            compatible = "renesas,r7s721063-mstp-clocks", "renesas,cpg-mstp-clocks";
            reg = <0x0 0xe615099c 0x0 0x4
                   0x0 0xe61509ac 0x0 0x4>;
            clocks = <0xa 0xa 0xa>;
            #clock-cells = <0x1>;
            renesas,clock-indices = <0x6 0x7 0x8>;
            clock-output-names = "scifa3", "scifa4", "scifa5";
        };
    };

    

    memory@40000000 {
        device_type = "memory";
        reg = <0x0 0x40000000 0x0 0x40000000>; /*1 GB*/
    };

    /* Memory map SFMA (enable by merlot loader) content into to kernel space */ 
    sfmamm@10000000 {
        compatible = "renesas,sfmamm-r7s721063";
       
        /* The 'memory-map' is proprietary naming. We can't use 'reg' because
           Integrity tries to map this into kernel memory. Maybe one could use
          'ranges' properties but it not clear if the OS processes it somehow.
          To be safe we're using a dedicated 'memory-map' property.
          Format is physical address, mapped address (kernel), length, all 32bit
        */
        memory-map = <0x10000000 0x80000000 0x2000000>; /*physical Addr.; mapped Addr; size 0x2000000 ->32MB NOR */

        status = "ok";
    };

    tmu@e61e0000 {
        compatible = "renesas,r7s721063-tmu";
        reg = <0x0 0xe61e0000 0x0 0x30>;

        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x88 0x4
                      0x0 0x89 0x4
                      0x0 0x8a 0x4>;
    };

    i2c@e6508000 {
        /* I2C bus addresses use one 32bit 'reg' values */
        #address-cells = <0x1>;
        #size-cells = <0x0>;
        
        compatible = "renesas,i2c-r7s721063";
        
        /* I2C0 base address */
        reg = <0x0 0xe6508000 0x0 0x40>;
        
        /* I2C0 interrupt vector */
        /* Interrupt signal is defined as following

           IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x11f 0x4>;
        clocks = <&mstp9_clks 0x1f>;
        status = "disabled";
    };

    i2c@e6518000 {
        #address-cells = <0x1>;
        #size-cells = <0x0>;
        compatible = "renesas,i2c-r7s721063";

        /* I2C1 base address */
        reg = <0x0 0xe6518000 0x0 0x40>;
        /* I2C1 interrupt vector */
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x120 0x4>;

        clocks = <&mstp9_clks 0x1e>;
        status = "okay";
        pinctrl-0 = <0x5>;
        pinctrl-names = "default";
        clock-frequency = <0x61a80>;

        eeprom@50 {
            compatible = "renesas,24c02";
            /* I2C address */
            reg = <0x50>;
            pagesize = <0x10>;
        };
    };

    dhd: dhd@e6e40000 {
        compatible = "renesas,gpu2d-r7s721063";
        reg = <0 0xe6e40000 0 0x1000>;

        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x72 0x4
                      0x0 0x73 0x4
                      0x0 0x74 0x4>;
        status = "ok";
    };

    powervr@fd800000 {
        compatible = "renesas,r7s721063-powervr";
        reg = <0x0 0xfd800000 0x0 0x10000>;

        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x77 0x4>;
    };

    sysc@e6180000 {
        compatible = "renesas,r7s721063-sysc";
        reg = <0x0 0xe6180000 0x0 0x200>;
    };
    
    deviceVersion@ff000044 {
        compatible = "renesas,r7s721063-devversion";
        reg = <0x0 0xff000044 0x0 0x8>;
    };
    
    
    /* All PLLs are staticly controlled by boot loader. PLL0 is an exception as it is dedicated to
       be used by DUs */
    pll0: pll0@0xe6150000 {
        #clock-cells = <0>;
        compatible = "renesas, r7s721063-cpg";
        reg = <0x0 0xe6150000 0x0 0x0B00>;

        /* sscg_depth: PLLx SSCG modulation depth control parameter: */
        /* 0: DP1  (Center spread only) */
        /* 1: DP2 */
        /* 2: DP3 */
        sscg_depth = < 1 >;

        /* sscg_bandset: PLLx SSCG modulation frequency band control */
        /* 0: fMOD > 10 kHz  */
        /* 1: fMOD <= 10 kHz */
        sscg_bandset =  < 0 >;

        /* sscg_twgcnt: PLLx SSCG modulation frequency control parameter */
        sscg_twgcnt =  < 7 >;

        /* sscg_sdiv: PLLx SSCG modulation frequency control parameter */
        sscg_sdiv =  < 2 >;

        /* sscg_mode: SSCG frequency dithering mode selection */
        /* 0: center-spread mode */
        /* 1: down-spread mode */
        sscg_mode =  < 1 >;

        /* sscg_rstn: SSCG mode control */
        /* 0: frequency dithering enabled */
        /* 1: frequency dithering disabled */
        sscg_rstn =  < 1 >;
        
        clock-output-names = "pll0";
    };
   
    pll1: pll1@0xe6150000 {
        #clock-cells = <0>;
        compatible = "renesas, r7s721063-cpg";
  
        clock-output-names = "pll1";
    };
    
    plls: plls@0xe6150000 {
        #clock-cells = <0>;
        compatible = "renesas, r7s721063-cpg";
  
        clock-output-names = "plls";
    };
    
    pll3: pll3@0xe6150000 {
        #clock-cells = <0>;
        compatible = "renesas, r7s721063-cpg";
  
        clock-output-names = "pll3";
    };
    
    
    tcon@feb84000 {
        compatible = "renesas,r7s721063-tcon";
        reg = <0x0 0xfeb84000 0x0 0x2C4>;
    };
    
    lvds@feb94000 {
        compatible = "renesas,r7s721063-lvds";
        reg = <0x0 0xfeb90000 0x0 0x14>;
        lvds_mode = < 4 >;
    };

    rsds@feb84300 {
        compatible = "renesas,r7s721063-rsds";
        reg = <0x0 0xfeb84300 0x0 0x4>;
        rsds_enable = < 0 >;
        rsds_phase_shift = < 0 >;
        rsds_bit_swap = < 0 >;
    };

    vin@e6ef0000 {
        compatible = "renesas,r7s721063-vin";
        reg = <0x0 0xe6ef0000 0x0 0x1000>;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0xbc 0x4>;
        
        /* vi_config: use register values */
        vin-config {
            vin_source = < 0x00 >;
            vin_polarity_vsync = < 0x01 >;
            vin_polarity_hsync = < 0x01 >;
            vin_polarity_clock = < 0x00 >;
            vin_toggle_vsync = < 0x01 >;
            vin_toggle_hsync = < 0x00 >;
            vin_yuv_inputpin = < 0x00 >;
            vin_data_extension = < 0x00 >;
            vin_vsync_toggle_transition  = < 0x00 >;
            vin_hsync_toggle_count = < 0x00 >;
        };
    };

    vin@e6ef1000 {
        compatible = "renesas,r7s721063-vin";
        reg = <0x0 0xe6ef1000 0x0 0x1000>;
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0xbd 0x4>;
        vin-config {
            vin_source = < 0x00 >;
            vin_polarity_vsync = < 0x00 >;
            vin_polarity_hsync = < 0x00 >;
            vin_polarity_clock = < 0x00 >;
            vin_toggle_vsync = < 0x01 >;
            vin_toggle_hsync = < 0x00 >;
            vin_yuv_inputpin = < 0x00 >;
            vin_data_extension = < 0x00 >;
            vin_vsync_toggle_transition  = < 0x00 >;
            vin_hsync_toggle_count = < 0x00 >;
        };
    };
    mipi@e66c0000 {
        compatible = "renesas,r7s721063-mipi";
        reg = <0x0 0xe66c0000 0x0 0xb0>;
      
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x11b  0x4
                      0x0 0x11c  0x4>;
        mipi-config {
            mipi_clock_noise_filter_enable = < 0x01 >;
            /* attention, the numeric value here has to correspond to the enum <r_mipi_LaneNum_t>, 
               not the number of lines */
            mipi_no_of_lanes = < 0x02 >;
            mipi_reset_clock_enable = < 0x01 >;
            mipi_reset_data_enable = < 0x01 >;
            mipi_sot_clock_sel = < 0x00 >;
            mipi_ecc_enable = < 0x01 >; 
            mipi_crc_enable = < 0x01 >;
            mipi_sot_clock_count = < 0x14 >;
            mipi_sot_data_count = < 0x14 >;
            mipi_word_count = < 0x00 >;
            mipi_word_count_enable = < 0x00 >;
            mipi_noise_removal_count = < 0x05 >;
            mipi_noise_removal_enable = < 0x01 >;
            mipi_lp_buffer_word_count = < 0x20 >;
            mipi_lp_buffer_mode = < 0x00 >;
            mipi_line_blanking = < 0x04 >;
            mipi_reset_delay_lane0 = < 0x3f >;
            mipi_reset_delay_lane1 = < 0x3f >;
            mipi_reset_delay_lane2 = < 0x3f >;
            mipi_reset_delay_lane3 = < 0x3f >;
            mipi_eot_count = < 0x00 >;
          /*  
            mipi_dummy_pulse_width = < 0x00 >;
            mipi_dummy_back_porch = < 0x00 >;
            mipi_sync_width = < 0x00 >;
            mipi_insert_dummy_line_enable = < 0x00 >;
            mipi_extended_function_enable = < 0x00 >;       
          */  
       };
    };

	/* Dither module connected to LVDS */
    dith@feb90060 {
        compatible = "renesas,r7s721063-dith";
        reg = <0x0 0xfeb90060 0x0 0x0010>;
        dth_on           = < 0x1 >;
        dth_round_off    = < 0x1 >;
        dth_sel          = < 0x0 >;
        dth_blksel       = < 0x0 >;
        dth_cksel        = < 0x0 >;
        panel_bt_width   = < 0x1 >;
        dth_pattern_valA = < 0x0 >;
        dth_pattern_valB = < 0x0 >;
        dth_pattern_valC = < 0x0 >;
        dth_pattern_valD = < 0x0 >;
        dth_rand_invert  = < 0x0 >;
        dth_rand_polynom = < 0x12af8e9d >;    
    };
    
    /* Dither module connected to DP */
    dith@e6e53800 {
        compatible = "renesas,r7s721063-dith";
        reg = <0x0 0xe6e53800 0x0 0x0010>;
        dth_on           = < 0x1 >;
        dth_round_off    = < 0x1 >;
        dth_sel          = < 0x0 >;
        dth_blksel       = < 0x0 >;
        dth_cksel        = < 0x0 >;
        panel_bt_width   = < 0x1 >;
        dth_pattern_valA = < 0x0 >;
        dth_pattern_valB = < 0x0 >;
        dth_pattern_valC = < 0x0 >;
        dth_pattern_valD = < 0x0 >;
        dth_rand_invert  = < 0x0 >;
        dth_rand_polynom = < 0x00000000 >;        
    };
    
    /* Dither module connected to TCN */
    dith@feb84030 {
        compatible = "renesas,r7s721063-dith";
        reg = <0x0 0xfeb84030 0x0 0x0010>;
        dth_on           = < 0x0 >;
        dth_round_off    = < 0x0 >;
        dth_sel          = < 0x1 >;
        dth_blksel       = < 0x1 >;
        dth_cksel        = < 0x0 >;
        panel_bt_width   = < 0x2 >;
        dth_pattern_valA = < 0x0 >;
        dth_pattern_valB = < 0x0 >;
        dth_pattern_valC = < 0x0 >;
        dth_pattern_valD = < 0x0 >;
        dth_rand_invert  = < 0x0 >;
        dth_rand_polynom = < 0x12af8e9d >;        
    };
    du@feb00000 {
        compatible = "renesas,r7s721063-du";
        reg = <0x0 0xfeb00000 0x0 0x28014>;
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x100 0x4>;
        main-display {
            discom_enabled = < 0x03 >;
            planes_assigned = < 0x55 >;
            vsp_assigned = < 0x01 >;
            vsp_planes = < 0x01 >;
            du_display_out = < 2 >;
            clocks = <&pll0>; 
            VESA_1280x800_60Hz {
                du_screen_width = < 1280 >;
                du_screen_height = < 800 >;
                du_flags = < 0x21 >;
                du_ht = < 1680 >;
                du_hbw = < 400 >;
                du_hfp = < 64 >;
                du_hsw = < 136 >;
                du_vt = < 828 >;
                du_vbw = < 28 >;
                du_vfp = < 1 >;
                du_vsw = < 3 >;
                du_pxclk = < 83460000 >;
            };
            VESA_640x480_60Hz {
                du_screen_width = < 640 >;
                du_screen_height = < 480 >;
                du_flags = < 0x21 >;
                du_ht = < 800 >;
                du_hbw = < 160 >;
                du_hfp = < 16 >;
                du_hsw = < 96 >;
                du_vt = < 525 >;
                du_vbw = < 45 >;
                du_vfp = < 10 >;
                du_vsw = < 2 >;
                du_pxclk = < 25175000 >;
            };
            VESA_1024x768_60Hz {
                du_screen_width = < 1024 >;
                du_screen_height = < 768 >;
                du_flags = < 0x21 >;
                du_ht = < 1344 >;
                du_hbw = < 320 >;
                du_hfp = < 24 >;
                du_hsw = < 136 >;
                du_vt = < 806 >;
                du_vbw = < 38 >;
                du_vfp = < 3 >;
                du_vsw = < 6 >;
                du_pxclk = < 65000000 >;
            };
        };
    };

    du@feb30000 {
        compatible = "renesas,r7s721063-du";
        reg = <0x0 0xfeb30000 0x0 0x28014>;
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x10C 0x4>;
        
        main-display {
            planes_assigned = < 0x00 >;
            vsp_assigned = < 0x00 >;
            vsp_planes = < 0x00 >;
            du_display_out = < 1 >;
            clocks = <&plls>; 
            /* This settings are taken as default initialisation (if no particular display is selected),
               the settings below are merly examples 
               Please have a look in the Display Data Base fro more displays to choose from 
            */
            /*  Settings explanation: 
            	du_flags:
                R_DDB_DISP_FLAG_NONE         (0uL << 0u),
                R_DDB_DISP_FLAG_VOEN         (1uL << 0u),
                R_DDB_DISP_FLAG_CSYNC        (1uL << 1u),
                R_DDB_DISP_FLAG_NEGCLK       (1uL << 2u),
                R_DDB_DISP_FLAG_HSYNC_ACTHI  (1uL << 3u),
                R_DDB_DISP_FLAG_VSYNC_ACTHI  (1uL << 4u),
                R_DDB_DISP_FLAG_DESYNC_ACTHI (1uL << 5u)
                du_ht   : horizontal total  
                         (screen width + du_hbw)        [pixel]
                du_hbw  : horizontal blanking width     [pixel]
                du_hfp  : horizontal front porch          [pixel]
                du_hsw  : horizontal sync (pilse) width [pixel]
                du_vt   : veritcal total   
                          (screen height + du_vbw)	    [pixel]
                du_vbw  : veritcal blanking width       [pixel]
                du_vfp  : veritcal front porch  	    [pixel]
                du_vsw  : veritcal sync (pilse) width   [pixel]
                du_pxclk: Pixelclock                    [Hz]
           */
            
            VESA_1280x800_60Hz {
                du_screen_width = < 1280 >;
                du_screen_height = < 800 >;
                du_flags = < 0x21 >;
                du_ht = < 1680 >;
                du_hbw = < 400 >;
                du_hfp = < 64 >;
                du_hsw = < 136 >;
                du_vt = < 828 >;
                du_vbw = < 28 >;
                du_vfp = < 1 >;
                du_vsw = < 3 >;
                du_pxclk = < 83460000 >;
            };
            /* Example 0 */
            TRULY_1280x768_60Hz {
                du_screen_width = < 1280 >;
                du_screen_height = < 768 >;
                du_flags = < 0x21 >;
                du_ht  = < 1424 >;
                du_hbw = < 144>;
                du_hfp = < 139 >;
                du_hsw = < 1 >;
                du_vt  = < 842 >;
                du_vbw = < 74 >;
                du_vfp = < 72 >;
                du_vsw = < 1 >;
                du_pxclk = < 71900000 >;
            };
            /* Example 1 */
            VESA_640x480_60Hz {
                du_screen_width = < 640 >;
                du_screen_height = < 480 >;
                du_flags = < 0x21 >;
                du_ht = < 800 >;
                du_hbw = < 160 >;
                du_hfp = < 16 >;
                du_hsw = < 96 >;
                du_vt = < 525 >;
                du_vbw = < 45 >;
                du_vfp = < 10 >;
                du_vsw = < 2 >;
                du_pxclk = < 25175000 >;
            };
            /* Example 2 */
            VESA_1024x768_60Hz {
                du_screen_width = < 1024 >;
                du_screen_height = < 768 >;
                du_flags = < 0x21 >;
                du_ht = < 1344 >;
                du_hbw = < 320 >;
                du_hfp = < 24 >;
                du_hsw = < 136 >;
                du_vt = < 806 >;
                du_vbw = < 38 >;
                du_vfp = < 3 >;
                du_vsw = < 6 >;
                du_pxclk = < 65000000 >;
            };
        };
    };

    du@fe980000 {
        compatible = "renesas,r7s721063-du";
        reg = <0x0 0xfe980000 0x0 0x28014>;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x10D 0x4>;
        
        main-display {
            discom_enabled = < 0x03 >;
            planes_assigned = < 0xFF >;
            vsp_assigned = < 0x00 >;
            vsp_planes = < 0x00 >;
            du_display_out = < 0 >;
            clocks = <&pll1>;
            VESA_800x480_60Hz {
                du_screen_width = < 800 >;
                du_screen_height = < 480 >;
                du_flags = < 0x25 >;
                du_ht = < 896 >;
                du_hbw = < 96 >;
                du_hfp = < 32 >;
                du_hsw = < 16 >;
                du_vt = < 488 >;
                du_vbw = < 8 >;
                du_vfp = < 4 >;
                du_vsw = < 2 >;
                du_pxclk = < 26000000 >;
            };
            VESA_640x480_60Hz {
                du_screen_width = < 640 >;
                du_screen_height = < 480 >;
                du_flags = < 0x21 >;
                du_ht = < 800 >;
                du_hbw = < 160 >;
                du_hfp = < 16 >;
                du_hsw = < 96 >;
                du_vt = < 525 >;
                du_vbw = < 45 >;
                du_vfp = < 10 >;
                du_vsw = < 2 >;
                du_pxclk = < 25175000 >;
            };
            VESA_1024x768_60Hz {
                du_screen_width = < 1024 >;
                du_screen_height = < 768 >;
                du_flags = < 0x21 >;
                du_ht = < 1344 >;
                du_hbw = < 320 >;
                du_hfp = < 24 >;
                du_hsw = < 136 >;
                du_vt = < 806 >;
                du_vbw = < 38 >;
                du_vfp = < 3 >;
                du_vsw = < 6 >;
                du_pxclk = < 65000000 >;
            };
        };
    };

    vspd@fe930000 {
        compatible = "renesas,r7s721063-vspd";
        reg = <0x0 0xfe930000 0x0 0x8000>;
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0xf6 0x4>;
    };

    vspd@fe938000 {
        compatible = "renesas,r7s721063-vspd";
        reg = <0x0 0xfe938000 0x0 0x8000>;
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0xf7 0x4>;
    };

    discom0@feb80000 {
        compatible = "renesas,r7s721063-discom";
        reg = <0x0 0xfeb89000 0x0 0x84
               0x0 0xe615014c 0x0 0x04  /* SMSTPCR7  */
               0x0 0xe61501cc 0x0 0x04  /* SRCR7 	 */
               0x0 0xe615095c 0x0 0x04>; /* SRSCLR7   */
    };
	discom1@feb80000 {
        compatible = "renesas,r7s721063-discom";
        reg = <0x0 0xfeb8a000 0x0 0x84
               0x0 0xe615014c 0x0 0x04	 /* SMSTPCR7  */
               0x0 0xe61501cc 0x0 0x04   /* SRCR7 	  */
               0x0 0xe615095c 0x0 0x04>; /* SRSCLR7   */ 
    };
	discom2@feb80000 {
        compatible = "renesas,r7s721063-discom";
        reg = <0x0 0xfeb80000 0x0 0x84	
               0x0 0xe615014c 0x0 0x04	 /* SMSTPCR7  */
               0x0 0xe61501cc 0x0 0x04	 /* SRCR7 	  */
               0x0 0xe615095c 0x0 0x04>; /* SRSCLR7   */
    };
	discom3@feb80000 {
        compatible = "renesas,r7s721063-discom";
        reg = <0x0 0xfeb81000 0x0 0x84
               0x0 0xe615014c 0x0 0x04   /* SMSTPCR7  */
               0x0 0xe61501cc 0x0 0x04   /* SRCR7 	  */
               0x0 0xe615095c 0x0 0x04>; /* SRSCLR7   */

    };	
	
    /* SPI MSIOF Channel 0 */
    spi0@e6e20000 {
        compatible = "renesas,spi-r7s721063";
        reg = <0x0 0xe6e20000 0x0 0x100>;   /* MSIOF0 */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 156 0x4>;
    };

    /* SPI MSIOF Channel 1 */
    spi1@e6e10000 {
        compatible = "renesas,spi-r7s721063";
        reg = <0x0 0xe6e10000 0x0 0x100>; /* MSIOF1 */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 157 0x4>;
    };

    /* SPI MSIOF Channel 2 */
    spi2@e6e00000 {
        compatible = "renesas,spi-r7s721063";
        reg = <0x0 0xe6e00000 0x0 0x100>;     /* MSIOF2           */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 158 0x4>;
    };

    /* SPI MSIOF Channel 3 */
    spi3@0xe6c7800 {
        compatible = "renesas,spi-r7s721063";
        reg = <0x0 0xe6c78000 0x0 0x100>;     /* MSIOF3          */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 159 0x4>;
    };

    /* SPI MSIOF Channel 4 */
    spi4@e6c80000 {
        compatible = "renesas,spi-r7s721063";
        reg = <0x0 0xe6c80000 0x0 0x100>;     /* MSIOF4           */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 160 0x4>;
    };

    /* SPI MSIOF Channel 5 */
    spi5@e6c60000 {
        compatible = "renesas,spi-r7s721063";
        reg = <0x0 0xe6c60000 0x0 0x100>;     /* MSIOF5           */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 161 0x4>;
    };

    /* SPI MSIOF Channel 6 */
    spi6@e6c70000 {
        compatible = "renesas,spi-r7s721063";
        reg = <0x0 0xe6c70000 0x0 0x100>;     /* MSIOF6           */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 164 0x4>;
    };

    /* NFMA (NAND) */
    nfma@e66d0000 {
        #address-cells = <0x1>;
        #size-cells = <0x0>;
        compatible = "renesas,nfma-r7s721063";

        reg = <0x0 0xe66d0000 0x0 0x160   /* NFMA base */
               0x0 0xe6e53404 0x0 0x004   /* NFMAFASTTR */
               0x0 0xe6150144 0x0 0x004>; /* SMSTPCR5 */
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x69 0x4>;      /* NFMA interrupt vector */
        status = "ok";
    };


    /* CMT1 */
    timer@e6130000 {
        compatible = "renesas,timer-cmt1-r7s721063";    //"renesas,cmt-48-gen2",
        reg = <0x0 0xe6130000 0x0 0x48
               0x0 0xe6130100 0x0 0x48
               0x0 0xe6130200 0x0 0x48
               0x0 0xe6130300 0x0 0x48
               0x0 0xe6130400 0x0 0x48
               0x0 0xe6131000 0x0 0x04      /* start address                */
               0x0 0xe615013C 0x0 0x04      /* module stop address          */
               0x0 0xe6150A10 0x0 0x04 >;   /* CMT clock control register   */

        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x78 0x4 
                      0x0 0x79 0x4 
                      0x0 0x7a 0x4 
                      0x0 0x7b 0x4 
                      0x0 0x7c 0x4 
                      0x0 0x7d 0x4 
                      0x0 0x7e 0x4 
                      0x0 0x7f 0x4>;
                      
        clocks = <0x3 0x1d>;
        clock-names = "fck";
        /* Select which channels the driver should support. 1 to support a channel, 0 to not support. */
        renesas,channels-mask = <0xff>;
        status = "ok";
    };
    
    /* TMU */
    timer@e61e0000 {
        compatible = "renesas,timer-tmu-r7s721063";
        reg = <0x0 0xe61e0008 0x0 0x0C /* TMU0_0_0                  */
               0x0 0xe61e0014 0x0 0x0C /* TMU0_0_1                  */
               0x0 0xe61e0020 0x0 0x0C /* TMU0_0_2                  */
               
               0x0 0xe61e1008 0x0 0x0C /* TMU0_0_2TMU0_1_3          */
               0x0 0xe61e1014 0x0 0x0C /* TMU0_0_2TMU0_1_4          */
               0x0 0xe61e1020 0x0 0x10 /* TMU0_0_2TMU0_1_5 with input capture */
                              
               0x0 0xe61e2008 0x0 0x0C /* TMU0_0_2TMU0_2_6          */
               0x0 0xe61e2014 0x0 0x0C /* TMU0_0_2TMU0_2_7          */
               0x0 0xe61e2020 0x0 0x10 /* TMU0_0_2TMU0_2_8 with input capture */

               0x0 0xe61e3008 0x0 0x0C /* TMU0_3_9                  */
               0x0 0xe61e3014 0x0 0x0C /* TMU0_3_10                 */
               0x0 0xe61e3020 0x0 0x10 /* TMU0_3_11 with input capture */ 

               0x0 0xe61e0004 0x0 0x04 /* TMU0_0_x  start address   */
               0x0 0xe61e1004 0x0 0x04 /* TMU0_1_x  start address   */
               0x0 0xe61e2004 0x0 0x04 /* TMU0_2_x  start address   */
               0x0 0xe61e3004 0x0 0x04 /* TMU0_3_x  start address   */

               0x0 0xe6150134 0x0 0x04 /* module stop address       */ 
               0x0 0xe6150A0C 0x0 0x04 /* TMU clock control register*/
               >;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 136 0x4  /* INTTMU0T0C0UF TMU_0_0 underflow */
                      0x0 137 0x4  /* INTTMU0T0C1UF TMU_0_1 underflow */
                      0x0 138 0x4  /* INTTMU0T0C2UF TMU_0_2 underflow */

                      0x0 128 0x4  /* INTTMU0T1C3UF TMU_1_3 underflow */
                      0x0 129 0x4  /* INTTMU0T1C4UF TMU_1_4 underflow */
                      0x0 130 0x4  /* INTTMU0T1C5UF TMU_1_5 underflow */

                      0x0 303 0x4  /* INTTMU0T2C6UF TMU_2_6 underflow */
                      0x0 304 0x4  /* INTTMU0T2C7UF TMU_2_7 underflow */
                      0x0 305 0x4  /* INTTMU0T2C8UF TMU_2_8 underflow */

                      0x0 131 0x4  /* INTTMU0T3C9UF  TMU_3_9 underflow */
                      0x0 132 0x4  /* INTTMU0T3C10UF TMU_3_10 underflow */
                      0x0 133 0x4  /* INTTMU0T3C11UF TMU_3_11 underflow */

                      0x0 147 0x4  /* INTTMU0CPT1C5 TMU_1_5 input capture */ 
                      0x0 306 0x4  /* INTTMU0CPT2C8 TMU_2_8 input capture */ 
                      0x0 117 0x4  /* INTTMU0CPT3C11 TMU_3_11 input capture*/  
                      >;
        
        clocks = <0x3 0x1d>;
        clock-names = "fck";
        /* Select which channels the driver should support. 1 to support a channel, 0 to not support. */
        renesas,channels-mask = <0xfff>;
        status = "ok";
    };
    
    
    /* TPU */
    timer@e60f0000 {
        compatible = "renesas,timer-tpu-r7s721063";
        reg = <0x0 0xe60f0000 0x0 0x148 /* TPU0_base address                */
               0x0 0xe60f1000 0x0 0x148 /* TPU1_base address                */
               0x0 0xe60f2000 0x0 0x148 /* TPU2_base address                */
               0x0 0xe60f3000 0x0 0x148 /* TPU3_base address                */
               0x0 0xe615013C 0x0 0x4   /* SMSTPCR3 Module stop reg.  TPU0  */
               0x0 0xe6150148 0x0 0x4   /* SMSTPCR6 Module stop register    */
               >;                       /* TPU1 to TPU3                     */
               
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* Table 7.1 AP-System core ITSC-SYS Interrupt mapping */
        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 135 0x4   /* INTTPU0              */ 
                      0x0 177 0x4   /* INTTPU1              */
                      0x0 178 0x4   /* INTTPU2              */
                      0x0 179 0x4   /* INTTPU3              */
                      >; 

        clocks = <0x3 0x1d>;
        clock-names = "fck";
        renesas,channels-mask = <0xff>;
        status = "ok";
    };

    dma-controller@e6700000 {
        compatible = "renesas,dma-sysdmac-r7s721063";
        reg = <0x0 0xe6700000 0x0 0x20000            /* sys dma 0  base Address*/
            0x0 0xE6150138 0x0 0x04>;                /* dma Module enable address*/
        /* sys dmac0 interrupt vector IDs*/
        interrupts = <0 200 4     /* INTDMACDEI0 Sys DMAC channel 0 interrupt */
                      0 201 4     /* INTDMACDEI1 Sys DMAC channel 1 interrupt */
                      0 202 4     /* INTDMACDEI2 Sys DMAC channel 2 interrupt */
                      0 203 4     /* INTDMACDEI3 Sys DMAC channel 3 interrupt */
                      0 204 4     /* INTDMACDEI4 Sys DMAC channel 4 interrupt */
                      0 205 4     /* INTDMACDEI5 Sys DMAC channel 5 interrupt */
                      0 206 4     /* INTDMACDEI6 Sys DMAC channel 6 interrupt */
                      0 207 4     /* INTDMACDEI7 Sys DMAC channel 7 interrupt */
                      0 208 4     /* INTDMACDEI8 Sys DMAC channel 8 interrupt */
                      0 209 4     /* INTDMACDEI9 Sys DMAC channel 9 interrupt */
                      0 210 4     /* INTDMACDEI10 Sys DMAC channel 10 interrupt */
                      0 211 4     /* INTDMACDEI11 Sys DMAC channel 11 interrupt */
                      0 212 4     /* INTDMACDEI12 Sys DMAC channel 12 interrupt */
                      0 213 4     /* INTDMACDEI13 Sys DMAC channel 13 interrupt */
                      0 214 4     /* INTDMACDEI14 Sys DMAC channel 14 interrupt */
                      >;
        clocks = <0x9 0x13>;
        clock-names = "fck";
        dma-channels = <15>;
        
    };
    
    dma-controller@e6720000 {
        compatible = "renesas,dma-sysdmac-r7s721063";
        
        reg = <0x0 0xe6720000 0x0 0x20000       /* sys dmac 1  base Address*/
               0x0 0xE6150138 0x0 0x04>;        /* dma Module enable address*/
        /* sys dmac1 interrupt vector IDs*/
        interrupts = < 0 216 4       /* INTDMACDEI15 Sys DMAC channel 15 interrupt */
                       0 217 4       /* INTDMACDEI16 Sys DMAC channel 16 interrupt */
                       0 218 4       /* INTDMACDEI17 Sys DMAC channel 17 interrupt */
                       0 219 4       /* INTDMACDEI18 Sys DMAC channel 18 interrupt */
                       0 308 4       /* INTDMACDEI19 Sys DMAC channel 19 interrupt */
                       0 309 4       /* INTDMACDEI20 Sys DMAC channel 20 interrupt */
                       0 310 4       /* INTDMACDEI21 Sys DMAC channel 21 interrupt */
                       0 311 4       /* INTDMACDEI22 Sys DMAC channel 22 interrupt */
                       0 312 4       /* INTDMACDEI23 Sys DMAC channel 23 interrupt */
                       0 313 4       /* INTDMACDEI24 Sys DMAC channel 24 interrupt */
                       0 314 4       /* INTDMACDEI25 Sys DMAC channel 25 interrupt */
                       0 315 4       /* INTDMACDEI26 Sys DMAC channel 26 interrupt */
                       0 316 4       /* INTDMACDEI27 Sys DMAC channel 27 interrupt */
                       0 317 4       /* INTDMACDEI28 Sys DMAC channel 28 interrupt */
                       0 318 4       /* INTDMACDEI29 Sys DMAC channel 29 interrupt */
                     >;
        clocks = <0x9 0x13>;
        clock-names = "fck";
        dma-channels = <15>;       
    };
    /* [MGol] just some basic stuff */
    sfma@fec08000 {
        #address-cells = <0x1>;
        #size-cells = <0x0>;
        compatible = "renesas,sfma-r7s721063";
        
        reg = <0x0 0xfec08000 0x0 0x10000 /* SFMA Regs space  */
               0x0 0xe6150000 0x0 0x1000  /* SFMACLKCR CKSC_SFMACLK_Control Register */
               >; 
        status = "ok";
    };

    /* [OA] iVDP1c - VLC */
    vlc@fe900000 {
        compatible = "renesas,vlc-r7s721063";
        reg = <0x0 0xfe900000 0x0 0x200>;

        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x111 0x4>;
    };
    
    /* [OA] iVDP1c - CE */
    ce@fe900200 {
        compatible = "renesas,ce-r7s721063";
        reg = <0x0 0xfe900200 0x0 0x200>;
        
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 0x112 0x4
                      0x0 0x113 0x4>;
    };
    
    /* [OA] Video Processing Cache */
    vpc@fe908000 {
        compatible = "renesas,vpc-r7s721063";
        reg = <0x0 0xfe908000 0x0 0x90>;
    };
    /* [OA] S3CTRL */
    s3ctl@e6784000 {
        compatible = "renesas,s3ctl-r7s721063";
        reg = <0x0 0xe6784000 0x0 0x4000>;
    };
    
    /* [OA] Required for video decoding */
    prr@FF000044 {
        compatible = "renesas,prr-r7s721063";
        reg = <0x0 0xff000044 0x0 0x4>;
    };
    /* [OA] Media AXI xconnect */
    mxi@e6784000 {
        compatible = "renesas,mxi-r7s721063";
        reg = <0x0 0xfe960000 0x0 0x1000>;
		mem_range = <0x00500080>;     /* memory window definition, 
										  Value to be written by the RIVP driver   */
    };
    /* [OA] SYS-AXI xconnect */
    axi@FF802300 {
        compatible = "renesas,axi-r7s721063";
        reg = <0x0 0xff802300 0x0 0x1000>;
    };
    
    /* [OA] IPMMU-MX */
    ipmmumx@fe951000 {
        compatible = "renesas,ipmmumx-r7s721063";
        reg = <0x0 0xfe951000 0x0 0x4000>;
    };

    /* MMC */
    mmc@ee200000 {
        compatible = "renesas,mmc-r7s721063";
    
        reg = <0x0 0xee200000 0x0 0x90    /* MMC0 base */
               0x0 0xe615013c 0x0 0x04    /* SMSTPCR3 */
               0x0 0xe6150240 0x0 0x04>;  /* MMC0CKCR */
    
        /*  Interrupt signal is defined as following

            IRQ_TYPE_LEVEL_HIGH = 0x4
        */

        /* interrupt-type (SPI), interrupt number, interrupt signal */
        interrupts = <0x0 169 0x4>;       /* MMC interrupt vector */
        status = "ok";
    };

    /* AXISTAT */
    axistat@E6420000 {
        compatible = "renesas,axistat-r7s721063";
        reg = <0x0 0xe6420000 0x0 0x20000
               0x0 0xe615013c 0x0 0x04    /* SMSTPCR3 */
               >;
    };

	/* RESET PACKAGE */
    resetpack1@00000000 {
        compatible = "continental, reset_package1";
        reg = <0x0 0xE6080000 0x0 0x10    /* Generic Counter */
               0x0 0xE63A0000 0x0 0x12000 /* IRAM0 */
               >;
    };
};
